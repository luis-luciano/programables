

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Tue Jun 02 08:35:37 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	16LF1936
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	dabs	1,0x7E,2
    18  0000                     	;# 
    19  0001                     	;# 
    20  0002                     	;# 
    21  0003                     	;# 
    22  0004                     	;# 
    23  0005                     	;# 
    24  0006                     	;# 
    25  0007                     	;# 
    26  0008                     	;# 
    27  0009                     	;# 
    28  000A                     	;# 
    29  000B                     	;# 
    30  000C                     	;# 
    31  000D                     	;# 
    32  000E                     	;# 
    33  0010                     	;# 
    34  0011                     	;# 
    35  0012                     	;# 
    36  0013                     	;# 
    37  0015                     	;# 
    38  0016                     	;# 
    39  0016                     	;# 
    40  0017                     	;# 
    41  0018                     	;# 
    42  0019                     	;# 
    43  001A                     	;# 
    44  001B                     	;# 
    45  001C                     	;# 
    46  001E                     	;# 
    47  001F                     	;# 
    48  008C                     	;# 
    49  008D                     	;# 
    50  008E                     	;# 
    51  0090                     	;# 
    52  0091                     	;# 
    53  0092                     	;# 
    54  0093                     	;# 
    55  0095                     	;# 
    56  0096                     	;# 
    57  0097                     	;# 
    58  0098                     	;# 
    59  0099                     	;# 
    60  009A                     	;# 
    61  009B                     	;# 
    62  009B                     	;# 
    63  009C                     	;# 
    64  009D                     	;# 
    65  009E                     	;# 
    66  010C                     	;# 
    67  010D                     	;# 
    68  010E                     	;# 
    69  0110                     	;# 
    70  0111                     	;# 
    71  0112                     	;# 
    72  0113                     	;# 
    73  0114                     	;# 
    74  0115                     	;# 
    75  0116                     	;# 
    76  0117                     	;# 
    77  0118                     	;# 
    78  0119                     	;# 
    79  011A                     	;# 
    80  011B                     	;# 
    81  011D                     	;# 
    82  018C                     	;# 
    83  018D                     	;# 
    84  0191                     	;# 
    85  0191                     	;# 
    86  0192                     	;# 
    87  0193                     	;# 
    88  0193                     	;# 
    89  0193                     	;# 
    90  0194                     	;# 
    91  0195                     	;# 
    92  0196                     	;# 
    93  0199                     	;# 
    94  019A                     	;# 
    95  019B                     	;# 
    96  019B                     	;# 
    97  019B                     	;# 
    98  019B                     	;# 
    99  019C                     	;# 
   100  019C                     	;# 
   101  019D                     	;# 
   102  019E                     	;# 
   103  019F                     	;# 
   104  020D                     	;# 
   105  0210                     	;# 
   106  0211                     	;# 
   107  0212                     	;# 
   108  0213                     	;# 
   109  0214                     	;# 
   110  0215                     	;# 
   111  0215                     	;# 
   112  0216                     	;# 
   113  0217                     	;# 
   114  0291                     	;# 
   115  0291                     	;# 
   116  0292                     	;# 
   117  0293                     	;# 
   118  0294                     	;# 
   119  0295                     	;# 
   120  0295                     	;# 
   121  0296                     	;# 
   122  0298                     	;# 
   123  0298                     	;# 
   124  0299                     	;# 
   125  029A                     	;# 
   126  029B                     	;# 
   127  029C                     	;# 
   128  029C                     	;# 
   129  029D                     	;# 
   130  029E                     	;# 
   131  029F                     	;# 
   132  0311                     	;# 
   133  0311                     	;# 
   134  0312                     	;# 
   135  0313                     	;# 
   136  0314                     	;# 
   137  0315                     	;# 
   138  0315                     	;# 
   139  0316                     	;# 
   140  0318                     	;# 
   141  0318                     	;# 
   142  0319                     	;# 
   143  031A                     	;# 
   144  031C                     	;# 
   145  031C                     	;# 
   146  031D                     	;# 
   147  031E                     	;# 
   148  0394                     	;# 
   149  0395                     	;# 
   150  0396                     	;# 
   151  0415                     	;# 
   152  0416                     	;# 
   153  0417                     	;# 
   154  041C                     	;# 
   155  041D                     	;# 
   156  041E                     	;# 
   157  0791                     	;# 
   158  0792                     	;# 
   159  0793                     	;# 
   160  0794                     	;# 
   161  0795                     	;# 
   162  0798                     	;# 
   163  0799                     	;# 
   164  07A0                     	;# 
   165  07A1                     	;# 
   166  07A3                     	;# 
   167  07A4                     	;# 
   168  07A6                     	;# 
   169  07A7                     	;# 
   170  07A9                     	;# 
   171  07AA                     	;# 
   172  0FE4                     	;# 
   173  0FE5                     	;# 
   174  0FE6                     	;# 
   175  0FE7                     	;# 
   176  0FE8                     	;# 
   177  0FE9                     	;# 
   178  0FEA                     	;# 
   179  0FEB                     	;# 
   180  0FED                     	;# 
   181  0FEE                     	;# 
   182  0FEF                     	;# 
   183                           
   184                           	psect	nvBANK0
   185  0032                     __pnvBANK0:	
   186  0032                     _neg:	
   187  0032                     	ds	2
   188  0034                     _pos:	
   189  0034                     	ds	2
   190  000C                     _PORTA	set	12
   191  000D                     _PORTB	set	13
   192  009D                     _ADCON0bits	set	157
   193  009E                     _ADCON1bits	set	158
   194  009C                     _ADRESH	set	156
   195  009B                     _ADRESL	set	155
   196  0099                     _OSCCONbits	set	153
   197  008C                     _TRISAbits	set	140
   198  008D                     _TRISB	set	141
   199  018C                     _ANSELAbits	set	396
   200  018D                     _ANSELB	set	397
   201                           
   202                           ; #config settings
   203  0000                     
   204                           	psect	cinit
   205  07F9                     start_initialization:	
   206  07F9                     __initialization:	
   207                           
   208                           ; Clear objects allocated to BANK0
   209  07F9  01B6               	clrf	__pbssBANK0& (0+127)
   210  07FA  01B7               	clrf	(__pbssBANK0+1)& (0+127)
   211  07FB  01B8               	clrf	(__pbssBANK0+2)& (0+127)
   212  07FC                     end_of_initialization:	
   213                           ;End of C runtime variable initialization code
   214                           
   215  07FC                     __end_of__initialization:	
   216  07FC  107E               	bcf	pic14e$flags,0	;clear compiler interrupt flag
   217  07FD  0020               	movlb	0
   218  07FE  3185  2D78         	ljmp	_main	;jump to C main() function
   219                           
   220                           	psect	bssBANK0
   221  0036                     __pbssBANK0:	
   222  0036                     _result:	
   223  0036                     	ds	3
   224                           
   225                           	psect	cstackCOMMON
   226  0070                     __pcstackCOMMON:	
   227  0070                     ?_setup:	
   228  0070                     ??_setup:	
   229                           ; 0 bytes @ 0x0
   230                           
   231  0070                     ?_loop:	
   232                           ; 0 bytes @ 0x0
   233                           
   234  0070                     ?_main:	
   235                           ; 0 bytes @ 0x0
   236                           
   237  0070                     ?___ftge:	
   238                           ; 0 bytes @ 0x0
   239                           
   240  0070                     ?_convertir:	
   241                           ; 1 bit 
   242                           
   243  0070                     ?___ftpack:	
   244                           ; 2 bytes @ 0x0
   245                           
   246  0070                     convertir@channel:	
   247                           ; 3 bytes @ 0x0
   248                           
   249  0070                     ___ftpack@arg:	
   250                           ; 2 bytes @ 0x0
   251                           
   252  0070                     ___ftge@ff1:	
   253                           ; 3 bytes @ 0x0
   254                           
   255                           
   256                           ; 3 bytes @ 0x0
   257  0070                     	ds	2
   258  0072                     ??_convertir:	
   259                           
   260                           ; 0 bytes @ 0x2
   261  0072                     	ds	1
   262  0073                     ___ftpack@exp:	
   263  0073                     ___ftge@ff2:	
   264                           ; 1 bytes @ 0x3
   265                           
   266                           
   267                           ; 3 bytes @ 0x3
   268  0073                     	ds	1
   269  0074                     ___ftpack@sign:	
   270                           
   271                           ; 1 bytes @ 0x4
   272  0074                     	ds	1
   273  0075                     ??___ftpack:	
   274                           
   275                           ; 0 bytes @ 0x5
   276  0075                     	ds	1
   277  0076                     ??___ftge:	
   278                           
   279                           ; 0 bytes @ 0x6
   280  0076                     	ds	2
   281  0078                     ?___awtoft:	
   282  0078                     ___awtoft@c:	
   283                           ; 3 bytes @ 0x8
   284                           
   285                           
   286                           ; 2 bytes @ 0x8
   287  0078                     	ds	1
   288  0079                     convertir@i:	
   289                           
   290                           ; 2 bytes @ 0x9
   291  0079                     	ds	2
   292  007B                     ??___awtoft:	
   293                           
   294                           ; 0 bytes @ 0xB
   295  007B                     	ds	2
   296  007D                     ___awtoft@sign:	
   297                           
   298                           ; 1 bytes @ 0xD
   299  007D                     	ds	1
   300  007E                     ??_main:	
   301                           
   302                           	psect	cstackBANK0
   303  0020                     __pcstackBANK0:	
   304                           ; 0 bytes @ 0xE
   305                           
   306  0020                     ?___ftdiv:	
   307  0020                     ___ftdiv@f2:	
   308                           ; 3 bytes @ 0x0
   309                           
   310                           
   311                           ; 3 bytes @ 0x0
   312  0020                     	ds	3
   313  0023                     ___ftdiv@f1:	
   314                           
   315                           ; 3 bytes @ 0x3
   316  0023                     	ds	3
   317  0026                     ??___ftdiv:	
   318                           
   319                           ; 0 bytes @ 0x6
   320  0026                     	ds	4
   321  002A                     ___ftdiv@cntr:	
   322                           
   323                           ; 1 bytes @ 0xA
   324  002A                     	ds	1
   325  002B                     ___ftdiv@f3:	
   326                           
   327                           ; 3 bytes @ 0xB
   328  002B                     	ds	3
   329  002E                     ___ftdiv@exp:	
   330                           
   331                           ; 1 bytes @ 0xE
   332  002E                     	ds	1
   333  002F                     ___ftdiv@sign:	
   334                           
   335                           ; 1 bytes @ 0xF
   336  002F                     	ds	1
   337  0030                     ??_loop:	
   338                           
   339                           ; 0 bytes @ 0x10
   340  0030                     	ds	2
   341                           
   342                           	psect	maintext
   343  0578                     __pmaintext:	
   344 ;;
   345 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   346 ;;
   347 ;; *************** function _main *****************
   348 ;; Defined at:
   349 ;;		line 106 in file "principal.c"
   350 ;; Parameters:    Size  Location     Type
   351 ;;		None
   352 ;; Auto vars:     Size  Location     Type
   353 ;;		None
   354 ;; Return value:  Size  Location     Type
   355 ;;		None               void
   356 ;; Registers used:
   357 ;;		wreg, status,2, status,0, pclath, cstack
   358 ;; Tracked objects:
   359 ;;		On entry : 17F/0
   360 ;;		On exit  : 0/0
   361 ;;		Unchanged: 0/0
   362 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   363 ;;      Params:         0       0       0       0       0       0       0       0
   364 ;;      Locals:         0       0       0       0       0       0       0       0
   365 ;;      Temps:          0       0       0       0       0       0       0       0
   366 ;;      Totals:         0       0       0       0       0       0       0       0
   367 ;;Total ram usage:        0 bytes
   368 ;; Hardware stack levels required when called:    3
   369 ;; This function calls:
   370 ;;		_loop
   371 ;;		_setup
   372 ;; This function is called by:
   373 ;;		Startup code after reset
   374 ;; This function uses a non-reentrant model
   375 ;;
   376                           
   377                           
   378                           ;psect for function _main
   379  0578                     _main:	
   380                           
   381                           ;principal.c: 108: setup();
   382                           
   383                           ;incstack = 0
   384                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   385  0578  3185  259F  3185   	fcall	_setup
   386                           
   387                           ;principal.c: 109: loop();
   388  057B  3187  2743         	fcall	_loop
   389                           
   390                           ;principal.c: 110: return;
   391  057D  3180  2802         	ljmp	start
   392  057F                     __end_of_main:	
   393                           
   394                           	psect	text1
   395  059F                     __ptext1:	
   396 ;; *************** function _setup *****************
   397 ;; Defined at:
   398 ;;		line 35 in file "principal.c"
   399 ;; Parameters:    Size  Location     Type
   400 ;;		None
   401 ;; Auto vars:     Size  Location     Type
   402 ;;		None
   403 ;; Return value:  Size  Location     Type
   404 ;;		None               void
   405 ;; Registers used:
   406 ;;		wreg, status,2, status,0
   407 ;; Tracked objects:
   408 ;;		On entry : 0/0
   409 ;;		On exit  : 0/0
   410 ;;		Unchanged: 0/0
   411 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   412 ;;      Params:         0       0       0       0       0       0       0       0
   413 ;;      Locals:         0       0       0       0       0       0       0       0
   414 ;;      Temps:          0       0       0       0       0       0       0       0
   415 ;;      Totals:         0       0       0       0       0       0       0       0
   416 ;;Total ram usage:        0 bytes
   417 ;; Hardware stack levels used:    1
   418 ;; This function calls:
   419 ;;		Nothing
   420 ;; This function is called by:
   421 ;;		_main
   422 ;; This function uses a non-reentrant model
   423 ;;
   424                           
   425                           
   426                           ;psect for function _setup
   427  059F                     _setup:	
   428                           
   429                           ;principal.c: 37: OSCCONbits.IRCF=11;
   430                           
   431                           ;incstack = 0
   432                           ; Regs used in _setup: [wreg+status,2+status,0]
   433  059F  0021               	movlb	1	; select bank1
   434  05A0  0819               	movf	25,w	;volatile
   435  05A1  3987               	andlw	-121
   436  05A2  3858               	iorlw	88
   437  05A3  0099               	movwf	25	;volatile
   438                           
   439                           ;principal.c: 39: ANSELAbits.ANSA0=1;
   440  05A4  0023               	movlb	3	; select bank3
   441  05A5  140C               	bsf	12,0	;volatile
   442                           
   443                           ;principal.c: 40: TRISAbits.TRISA0=1;
   444  05A6  0021               	movlb	1	; select bank1
   445  05A7  140C               	bsf	12,0	;volatile
   446                           
   447                           ;principal.c: 42: ANSELAbits.ANSA1=1;
   448  05A8  0023               	movlb	3	; select bank3
   449  05A9  148C               	bsf	12,1	;volatile
   450                           
   451                           ;principal.c: 43: TRISAbits.TRISA1=1;
   452  05AA  0021               	movlb	1	; select bank1
   453  05AB  148C               	bsf	12,1	;volatile
   454                           
   455                           ;principal.c: 44: PORTA=0x00;
   456  05AC  0020               	movlb	0	; select bank0
   457  05AD  018C               	clrf	12	;volatile
   458                           
   459                           ;principal.c: 45: ANSELB=0x00;
   460  05AE  0023               	movlb	3	; select bank3
   461  05AF  018D               	clrf	13	;volatile
   462                           
   463                           ;principal.c: 46: TRISB=0x00;
   464  05B0  0021               	movlb	1	; select bank1
   465  05B1  018D               	clrf	13	;volatile
   466                           
   467                           ;principal.c: 47: PORTB=0x00;
   468  05B2  0020               	movlb	0	; select bank0
   469  05B3  018D               	clrf	13	;volatile
   470                           
   471                           ;principal.c: 48: ADCON0bits.ADON=0;
   472  05B4  0021               	movlb	1	; select bank1
   473  05B5  101D               	bcf	29,0	;volatile
   474                           
   475                           ;principal.c: 49: ADCON0bits.GO=0;
   476  05B6  109D               	bcf	29,1	;volatile
   477                           
   478                           ;principal.c: 50: ADCON1bits.ADFM=1;
   479  05B7  179E               	bsf	30,7	;volatile
   480                           
   481                           ;principal.c: 51: ADCON1bits.ADCS=6;
   482  05B8  081E               	movf	30,w	;volatile
   483  05B9  398F               	andlw	-113
   484  05BA  3860               	iorlw	96
   485  05BB  009E               	movwf	30	;volatile
   486                           
   487                           ;principal.c: 52: ADCON1bits.ADNREF=0;
   488  05BC  111E               	bcf	30,2	;volatile
   489                           
   490                           ;principal.c: 53: ADCON1bits.ADPREF=0;
   491  05BD  30FC               	movlw	-4
   492  05BE  059E               	andwf	30,f	;volatile
   493                           
   494                           ;principal.c: 55: ADRESL=0x00;
   495  05BF  019B               	clrf	27	;volatile
   496                           
   497                           ;principal.c: 56: ADRESH=0x00;
   498  05C0  019C               	clrf	28	;volatile
   499  05C1  0008               	return
   500  05C2                     __end_of_setup:	
   501                           
   502                           	psect	text2
   503  0743                     __ptext2:	
   504 ;; *************** function _loop *****************
   505 ;; Defined at:
   506 ;;		line 75 in file "principal.c"
   507 ;; Parameters:    Size  Location     Type
   508 ;;		None
   509 ;; Auto vars:     Size  Location     Type
   510 ;;		None
   511 ;; Return value:  Size  Location     Type
   512 ;;		None               void
   513 ;; Registers used:
   514 ;;		wreg, status,2, status,0, pclath, cstack
   515 ;; Tracked objects:
   516 ;;		On entry : 0/0
   517 ;;		On exit  : 0/0
   518 ;;		Unchanged: 0/0
   519 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   520 ;;      Params:         0       0       0       0       0       0       0       0
   521 ;;      Locals:         0       0       0       0       0       0       0       0
   522 ;;      Temps:          0       2       0       0       0       0       0       0
   523 ;;      Totals:         0       2       0       0       0       0       0       0
   524 ;;Total ram usage:        2 bytes
   525 ;; Hardware stack levels used:    1
   526 ;; Hardware stack levels required when called:    2
   527 ;; This function calls:
   528 ;;		___awtoft
   529 ;;		___ftdiv
   530 ;;		___ftge
   531 ;;		_convertir
   532 ;; This function is called by:
   533 ;;		_main
   534 ;; This function uses a non-reentrant model
   535 ;;
   536                           
   537                           
   538                           ;psect for function _loop
   539  0743                     _loop:	
   540  0743                     l42:	
   541                           ;incstack = 0
   542                           ; Regs used in _loop: [wreg+status,2+status,0+pclath+cstack]
   543                           ;principal.c: 77: while(1)
   544                           
   545                           
   546                           ;principal.c: 78: {
   547                           ;principal.c: 79: pos=convertir(0);
   548  0743  3000               	movlw	0
   549  0744  00F0               	movwf	convertir@channel
   550  0745  3000               	movlw	0
   551  0746  00F1               	movwf	convertir@channel+1
   552  0747  3185  25FD  3187   	fcall	_convertir
   553  074A  0871               	movf	?_convertir+1,w
   554  074B  0020               	movlb	0	; select bank0
   555  074C  01B5               	clrf	_pos+1
   556  074D  07B5               	addwf	_pos+1,f
   557  074E  0870               	movf	?_convertir,w
   558  074F  01B4               	clrf	_pos
   559  0750  07B4               	addwf	_pos,f
   560                           
   561                           ;principal.c: 80: neg=convertir(1);
   562  0751  3001               	movlw	1
   563  0752  00F0               	movwf	convertir@channel
   564  0753  3000               	movlw	0
   565  0754  00F1               	movwf	convertir@channel+1
   566  0755  3185  25FD  3187   	fcall	_convertir
   567  0758  0871               	movf	?_convertir+1,w
   568  0759  0020               	movlb	0	; select bank0
   569  075A  01B3               	clrf	_neg+1
   570  075B  07B3               	addwf	_neg+1,f
   571  075C  0870               	movf	?_convertir,w
   572  075D  01B2               	clrf	_neg
   573  075E  07B2               	addwf	_neg,f
   574                           
   575                           ;principal.c: 82: if(pos>neg)
   576  075F  0833               	movf	_neg+1,w
   577  0760  3A80               	xorlw	128
   578  0761  00B0               	movwf	??_loop
   579  0762  0835               	movf	_pos+1,w
   580  0763  3A80               	xorlw	128
   581  0764  0230               	subwf	??_loop,w
   582  0765  1D03               	skipz
   583  0766  2F69               	goto	u555
   584  0767  0834               	movf	_pos,w
   585  0768  0232               	subwf	_neg,w
   586  0769                     u555:	
   587  0769  1803               	skipnc
   588  076A  2F7E               	goto	l839
   589                           
   590                           ;principal.c: 83: result=(pos-neg)/4.2f;
   591  076B  3066               	movlw	102
   592  076C  0020               	movlb	0	; select bank0
   593  076D  00A0               	movwf	___ftdiv@f2
   594  076E  3086               	movlw	134
   595  076F  00A1               	movwf	___ftdiv@f2+1
   596  0770  3040               	movlw	64
   597  0771  00A2               	movwf	___ftdiv@f2+2
   598  0772  0932               	comf	_neg,w
   599  0773  00B0               	movwf	??_loop
   600  0774  0933               	comf	_neg+1,w
   601  0775  00B1               	movwf	??_loop+1
   602  0776  0AB0               	incf	??_loop,f
   603  0777  1903               	skipnz
   604  0778  0AB1               	incf	??_loop+1,f
   605  0779  0834               	movf	_pos,w
   606  077A  0730               	addwf	??_loop,w
   607  077B  00F8               	movwf	___awtoft@c
   608  077C  0835               	movf	_pos+1,w
   609  077D  2F9D               	goto	L4
   610  077E                     l839:	
   611                           
   612                           ;principal.c: 84: else
   613                           ;principal.c: 85: if(pos<neg)
   614  077E  0020               	movlb	0	; select bank0
   615  077F  0835               	movf	_pos+1,w
   616  0780  3A80               	xorlw	128
   617  0781  00B0               	movwf	??_loop
   618  0782  0833               	movf	_neg+1,w
   619  0783  3A80               	xorlw	128
   620  0784  0230               	subwf	??_loop,w
   621  0785  1D03               	skipz
   622  0786  2F89               	goto	u565
   623  0787  0832               	movf	_neg,w
   624  0788  0234               	subwf	_pos,w
   625  0789                     u565:	
   626  0789  1803               	skipnc
   627  078A  2FB3               	goto	l44
   628                           
   629                           ;principal.c: 86: result=(neg-pos)/-4.2f;
   630  078B  3066               	movlw	102
   631  078C  0020               	movlb	0	; select bank0
   632  078D  00A0               	movwf	___ftdiv@f2
   633  078E  3086               	movlw	134
   634  078F  00A1               	movwf	___ftdiv@f2+1
   635  0790  30C0               	movlw	192
   636  0791  00A2               	movwf	___ftdiv@f2+2
   637  0792  0934               	comf	_pos,w
   638  0793  00B0               	movwf	??_loop
   639  0794  0935               	comf	_pos+1,w
   640  0795  00B1               	movwf	??_loop+1
   641  0796  0AB0               	incf	??_loop,f
   642  0797  1903               	skipnz
   643  0798  0AB1               	incf	??_loop+1,f
   644  0799  0832               	movf	_neg,w
   645  079A  0730               	addwf	??_loop,w
   646  079B  00F8               	movwf	___awtoft@c
   647  079C  0833               	movf	_neg+1,w
   648  079D                     L4:	
   649  079D  3D31               	addwfc	??_loop+1,w
   650  079E  00F9               	movwf	___awtoft@c+1
   651  079F  3185  257F  3187   	fcall	___awtoft
   652  07A2  0878               	movf	?___awtoft,w
   653  07A3  0020               	movlb	0	; select bank0
   654  07A4  00A3               	movwf	___ftdiv@f1
   655  07A5  0879               	movf	?___awtoft+1,w
   656  07A6  00A4               	movwf	___ftdiv@f1+1
   657  07A7  087A               	movf	?___awtoft+2,w
   658  07A8  00A5               	movwf	___ftdiv@f1+2
   659  07A9  3186  269A  3187   	fcall	___ftdiv
   660  07AC  0020               	movlb	0	; select bank0
   661  07AD  0820               	movf	?___ftdiv,w
   662  07AE  00B6               	movwf	_result
   663  07AF  0821               	movf	?___ftdiv+1,w
   664  07B0  00B7               	movwf	_result+1
   665  07B1  0822               	movf	?___ftdiv+2,w
   666  07B2  00B8               	movwf	_result+2
   667  07B3                     l44:	
   668                           
   669                           ;principal.c: 88: if(result>0f)
   670  07B3  3000               	movlw	0
   671  07B4  00F0               	movwf	___ftge@ff1
   672  07B5  3000               	movlw	0
   673  07B6  00F1               	movwf	___ftge@ff1+1
   674  07B7  3000               	movlw	0
   675  07B8  00F2               	movwf	___ftge@ff1+2
   676  07B9  0020               	movlb	0	; select bank0
   677  07BA  0836               	movf	_result,w
   678  07BB  00F3               	movwf	___ftge@ff2
   679  07BC  0837               	movf	_result+1,w
   680  07BD  00F4               	movwf	___ftge@ff2+1
   681  07BE  0838               	movf	_result+2,w
   682  07BF  00F5               	movwf	___ftge@ff2+2
   683  07C0  3185  25C2  3187   	fcall	___ftge
   684  07C3  1803               	btfsc	3,0
   685  07C4  2FDC               	goto	l849
   686                           
   687                           ;principal.c: 89: {
   688                           ;principal.c: 90: if(result>29f)
   689  07C5  3000               	movlw	0
   690  07C6  00F0               	movwf	___ftge@ff1
   691  07C7  30E8               	movlw	232
   692  07C8  00F1               	movwf	___ftge@ff1+1
   693  07C9  3041               	movlw	65
   694  07CA  00F2               	movwf	___ftge@ff1+2
   695  07CB  0020               	movlb	0	; select bank0
   696  07CC  0836               	movf	_result,w
   697  07CD  00F3               	movwf	___ftge@ff2
   698  07CE  0837               	movf	_result+1,w
   699  07CF  00F4               	movwf	___ftge@ff2+1
   700  07D0  0838               	movf	_result+2,w
   701  07D1  00F5               	movwf	___ftge@ff2+2
   702  07D2  3185  25C2  3187   	fcall	___ftge
   703  07D5  1803               	btfsc	3,0
   704  07D6  2FD9               	goto	l847
   705                           
   706                           ;principal.c: 91: PORTB=0b11111111;
   707  07D7  30FF               	movlw	255
   708  07D8  2FDA               	goto	L2
   709  07D9                     l847:	
   710                           
   711                           ;principal.c: 92: else
   712                           ;principal.c: 93: PORTB=0b00000011;
   713  07D9  3003               	movlw	3
   714  07DA                     L2:	
   715  07DA  0020               	movlb	0	; select bank0
   716  07DB  2FF7               	goto	L3
   717  07DC                     l849:	
   718                           ;principal.c: 94: }
   719                           
   720                           
   721                           ;principal.c: 95: else
   722                           ;principal.c: 96: if(result<=0f)
   723  07DC  3000               	movlw	0
   724  07DD  00F0               	movwf	___ftge@ff1
   725  07DE  3000               	movlw	0
   726  07DF  00F1               	movwf	___ftge@ff1+1
   727  07E0  3000               	movlw	0
   728  07E1  00F2               	movwf	___ftge@ff1+2
   729  07E2  0020               	movlb	0	; select bank0
   730  07E3  0836               	movf	_result,w
   731  07E4  00F3               	movwf	___ftge@ff2
   732  07E5  0837               	movf	_result+1,w
   733  07E6  00F4               	movwf	___ftge@ff2+1
   734  07E7  0838               	movf	_result+2,w
   735  07E8  00F5               	movwf	___ftge@ff2+2
   736  07E9  3185  25C2  3187   	fcall	___ftge
   737  07EC  1C03               	btfss	3,0
   738  07ED  2F43               	goto	l42
   739                           
   740                           ;principal.c: 97: {
   741                           ;principal.c: 98: if(result==0f)
   742  07EE  0020               	movlb	0	; select bank0
   743  07EF  0838               	movf	_result+2,w
   744  07F0  0437               	iorwf	_result+1,w
   745  07F1  0436               	iorwf	_result,w
   746  07F2  1D03               	skipz
   747  07F3  2FF6               	goto	l855
   748                           
   749                           ;principal.c: 99: PORTB=0;
   750  07F4  018D               	clrf	13	;volatile
   751  07F5  2F43               	goto	l42
   752  07F6                     l855:	
   753                           
   754                           ;principal.c: 100: else
   755                           ;principal.c: 101: PORTB=0x80;
   756  07F6  3080               	movlw	128
   757  07F7                     L3:	
   758  07F7  008D               	movwf	13	;volatile
   759  07F8  2F43               	goto	l42
   760  07F9                     __end_of_loop:	
   761                           
   762                           	psect	text3
   763  05FD                     __ptext3:	
   764 ;; *************** function _convertir *****************
   765 ;; Defined at:
   766 ;;		line 59 in file "principal.c"
   767 ;; Parameters:    Size  Location     Type
   768 ;;  channel         2    0[COMMON] int 
   769 ;; Auto vars:     Size  Location     Type
   770 ;;  i               2    9[COMMON] int 
   771 ;; Return value:  Size  Location     Type
   772 ;;                  2    0[COMMON] int 
   773 ;; Registers used:
   774 ;;		wreg, status,2, status,0
   775 ;; Tracked objects:
   776 ;;		On entry : 0/0
   777 ;;		On exit  : 0/0
   778 ;;		Unchanged: 0/0
   779 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   780 ;;      Params:         2       0       0       0       0       0       0       0
   781 ;;      Locals:         2       0       0       0       0       0       0       0
   782 ;;      Temps:          7       0       0       0       0       0       0       0
   783 ;;      Totals:        11       0       0       0       0       0       0       0
   784 ;;Total ram usage:       11 bytes
   785 ;; Hardware stack levels used:    1
   786 ;; This function calls:
   787 ;;		Nothing
   788 ;; This function is called by:
   789 ;;		_loop
   790 ;; This function uses a non-reentrant model
   791 ;;
   792                           
   793                           
   794                           ;psect for function _convertir
   795  05FD                     _convertir:	
   796                           
   797                           ;principal.c: 61: int i=0;
   798                           
   799                           ;incstack = 0
   800                           ; Regs used in _convertir: [wreg+status,2+status,0]
   801  05FD  01F9               	clrf	convertir@i
   802  05FE  01FA               	clrf	convertir@i+1
   803                           
   804                           ;principal.c: 62: ADCON0bits.CHS=channel;
   805  05FF  0870               	movf	convertir@channel,w
   806  0600  00F2               	movwf	??_convertir
   807  0601  0DF2               	rlf	??_convertir,f
   808  0602  0DF2               	rlf	??_convertir,f
   809  0603  0021               	movlb	1	; select bank1
   810  0604  081D               	movf	29,w	;volatile
   811  0605  0672               	xorwf	??_convertir,w
   812  0606  3983               	andlw	-125
   813  0607  0672               	xorwf	??_convertir,w
   814  0608  009D               	movwf	29	;volatile
   815                           
   816                           ;principal.c: 63: ADCON0bits.ADON=1;
   817  0609  141D               	bsf	29,0	;volatile
   818                           
   819                           ;principal.c: 64: ADCON0bits.GO=1;
   820  060A  149D               	bsf	29,1	;volatile
   821                           
   822                           ;principal.c: 65: _delay((unsigned long)((10)*(1000000/4000.0)));
   823  060B  3004               	movlw	4
   824  060C  00F3               	movwf	??_convertir+1
   825  060D  303D               	movlw	61
   826  060E  00F2               	movwf	??_convertir
   827  060F                     u617:	
   828  060F  0BF2               	decfsz	??_convertir,f
   829  0610  2E0F               	goto	u617
   830  0611  0BF3               	decfsz	??_convertir+1,f
   831  0612  2E0F               	goto	u617
   832  0613  3200               	nop2
   833  0614                     l30:	
   834                           ;principal.c: 66: while(ADCON0bits.GO);
   835                           
   836  0614  0021               	movlb	1	; select bank1
   837  0615  189D               	btfsc	29,1	;volatile
   838  0616  2E14               	goto	l30
   839                           
   840                           ;principal.c: 67: ADCON0bits.ADON=0;
   841  0617  101D               	bcf	29,0	;volatile
   842                           
   843                           ;principal.c: 68: i=ADRESH;
   844  0618  081C               	movf	28,w	;volatile
   845  0619  00F2               	movwf	??_convertir
   846  061A  01F3               	clrf	??_convertir+1
   847  061B  0872               	movf	??_convertir,w
   848  061C  00F9               	movwf	convertir@i
   849  061D  0873               	movf	??_convertir+1,w
   850  061E  00FA               	movwf	convertir@i+1
   851                           
   852                           ;principal.c: 69: i=(i<<8)|ADRESL;
   853  061F  081B               	movf	27,w	;volatile
   854  0620  00F2               	movwf	??_convertir
   855  0621  01F3               	clrf	??_convertir+1
   856  0622  087A               	movf	convertir@i+1,w
   857  0623  00F5               	movwf	??_convertir+3
   858  0624  0879               	movf	convertir@i,w
   859  0625  00F4               	movwf	??_convertir+2
   860  0626  0874               	movf	??_convertir+2,w
   861  0627  00F5               	movwf	??_convertir+3
   862  0628  01F4               	clrf	??_convertir+2
   863  0629  0872               	movf	??_convertir,w
   864  062A  0474               	iorwf	??_convertir+2,w
   865  062B  00F7               	movwf	??_convertir+5
   866  062C  0873               	movf	??_convertir+1,w
   867  062D  0475               	iorwf	??_convertir+3,w
   868  062E  00F8               	movwf	??_convertir+6
   869  062F  0877               	movf	??_convertir+5,w
   870  0630  00F9               	movwf	convertir@i
   871  0631  0878               	movf	??_convertir+6,w
   872  0632  00FA               	movwf	convertir@i+1
   873                           
   874                           ;principal.c: 70: return i;
   875  0633  087A               	movf	convertir@i+1,w
   876  0634  01F1               	clrf	?_convertir+1
   877  0635  07F1               	addwf	?_convertir+1,f
   878  0636  0879               	movf	convertir@i,w
   879  0637  01F0               	clrf	?_convertir
   880  0638  07F0               	addwf	?_convertir,f
   881  0639  0008               	return
   882  063A                     __end_of_convertir:	
   883                           
   884                           	psect	text4
   885  05C2                     __ptext4:	
   886 ;; *************** function ___ftge *****************
   887 ;; Defined at:
   888 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftge.c"
   889 ;; Parameters:    Size  Location     Type
   890 ;;  ff1             3    0[COMMON] float 
   891 ;;  ff2             3    3[COMMON] float 
   892 ;; Auto vars:     Size  Location     Type
   893 ;;		None
   894 ;; Return value:  Size  Location     Type
   895 ;;		None               void
   896 ;; Registers used:
   897 ;;		wreg, status,2, status,0
   898 ;; Tracked objects:
   899 ;;		On entry : 0/0
   900 ;;		On exit  : 0/0
   901 ;;		Unchanged: 0/0
   902 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   903 ;;      Params:         6       0       0       0       0       0       0       0
   904 ;;      Locals:         0       0       0       0       0       0       0       0
   905 ;;      Temps:          3       0       0       0       0       0       0       0
   906 ;;      Totals:         9       0       0       0       0       0       0       0
   907 ;;Total ram usage:        9 bytes
   908 ;; Hardware stack levels used:    1
   909 ;; This function calls:
   910 ;;		Nothing
   911 ;; This function is called by:
   912 ;;		_loop
   913 ;; This function uses a non-reentrant model
   914 ;;
   915                           
   916                           
   917                           ;psect for function ___ftge
   918  05C2                     ___ftge:	
   919                           
   920                           ;incstack = 0
   921                           ; Regs used in ___ftge: [wreg+status,2+status,0]
   922  05C2  1FF2               	btfss	___ftge@ff1+2,7
   923  05C3  2DD8               	goto	l817
   924  05C4  0970               	comf	___ftge@ff1,w
   925  05C5  00F6               	movwf	??___ftge
   926  05C6  0971               	comf	___ftge@ff1+1,w
   927  05C7  00F7               	movwf	??___ftge+1
   928  05C8  0972               	comf	___ftge@ff1+2,w
   929  05C9  00F8               	movwf	??___ftge+2
   930  05CA  0AF6               	incf	??___ftge,f
   931  05CB  1903               	skipnz
   932  05CC  0AF7               	incf	??___ftge+1,f
   933  05CD  1903               	skipnz
   934  05CE  0AF8               	incf	??___ftge+2,f
   935  05CF  3000               	movlw	0
   936  05D0  0776               	addwf	??___ftge,w
   937  05D1  00F0               	movwf	___ftge@ff1
   938  05D2  3000               	movlw	0
   939  05D3  3D77               	addwfc	??___ftge+1,w
   940  05D4  00F1               	movwf	___ftge@ff1+1
   941  05D5  3080               	movlw	128
   942  05D6  3D78               	addwfc	??___ftge+2,w
   943  05D7  00F2               	movwf	___ftge@ff1+2
   944  05D8                     l817:	
   945  05D8  1FF5               	btfss	___ftge@ff2+2,7
   946  05D9  2DEE               	goto	l821
   947  05DA  0973               	comf	___ftge@ff2,w
   948  05DB  00F6               	movwf	??___ftge
   949  05DC  0974               	comf	___ftge@ff2+1,w
   950  05DD  00F7               	movwf	??___ftge+1
   951  05DE  0975               	comf	___ftge@ff2+2,w
   952  05DF  00F8               	movwf	??___ftge+2
   953  05E0  0AF6               	incf	??___ftge,f
   954  05E1  1903               	skipnz
   955  05E2  0AF7               	incf	??___ftge+1,f
   956  05E3  1903               	skipnz
   957  05E4  0AF8               	incf	??___ftge+2,f
   958  05E5  3000               	movlw	0
   959  05E6  0776               	addwf	??___ftge,w
   960  05E7  00F3               	movwf	___ftge@ff2
   961  05E8  3000               	movlw	0
   962  05E9  3D77               	addwfc	??___ftge+1,w
   963  05EA  00F4               	movwf	___ftge@ff2+1
   964  05EB  3080               	movlw	128
   965  05EC  3D78               	addwfc	??___ftge+2,w
   966  05ED  00F5               	movwf	___ftge@ff2+2
   967  05EE                     l821:	
   968  05EE  3080               	movlw	128
   969  05EF  06F2               	xorwf	___ftge@ff1+2,f
   970  05F0  3080               	movlw	128
   971  05F1  06F5               	xorwf	___ftge@ff2+2,f
   972  05F2  0875               	movf	___ftge@ff2+2,w
   973  05F3  0272               	subwf	___ftge@ff1+2,w
   974  05F4  1D03               	skipz
   975  05F5  0008               	return
   976  05F6  0874               	movf	___ftge@ff2+1,w
   977  05F7  0271               	subwf	___ftge@ff1+1,w
   978  05F8  1D03               	skipz
   979  05F9  0008               	return
   980  05FA  0873               	movf	___ftge@ff2,w
   981  05FB  0270               	subwf	___ftge@ff1,w
   982  05FC  0008               	return
   983  05FD                     __end_of___ftge:	
   984                           
   985                           	psect	text5
   986  069A                     __ptext5:	
   987 ;; *************** function ___ftdiv *****************
   988 ;; Defined at:
   989 ;;		line 49 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic\ftdiv.c"
   990 ;; Parameters:    Size  Location     Type
   991 ;;  f2              3    0[BANK0 ] float 
   992 ;;  f1              3    3[BANK0 ] float 
   993 ;; Auto vars:     Size  Location     Type
   994 ;;  f3              3   11[BANK0 ] float 
   995 ;;  sign            1   15[BANK0 ] unsigned char 
   996 ;;  exp             1   14[BANK0 ] unsigned char 
   997 ;;  cntr            1   10[BANK0 ] unsigned char 
   998 ;; Return value:  Size  Location     Type
   999 ;;                  3    0[BANK0 ] float 
  1000 ;; Registers used:
  1001 ;;		wreg, status,2, status,0, pclath, cstack
  1002 ;; Tracked objects:
  1003 ;;		On entry : 0/0
  1004 ;;		On exit  : 0/0
  1005 ;;		Unchanged: 0/0
  1006 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1007 ;;      Params:         0       6       0       0       0       0       0       0
  1008 ;;      Locals:         0       6       0       0       0       0       0       0
  1009 ;;      Temps:          0       4       0       0       0       0       0       0
  1010 ;;      Totals:         0      16       0       0       0       0       0       0
  1011 ;;Total ram usage:       16 bytes
  1012 ;; Hardware stack levels used:    1
  1013 ;; Hardware stack levels required when called:    1
  1014 ;; This function calls:
  1015 ;;		___ftpack
  1016 ;; This function is called by:
  1017 ;;		_loop
  1018 ;; This function uses a non-reentrant model
  1019 ;;
  1020                           
  1021                           
  1022                           ;psect for function ___ftdiv
  1023  069A                     ___ftdiv:	
  1024                           
  1025                           ;incstack = 0
  1026                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  1027  069A  0020               	movlb	0	; select bank0
  1028  069B  0823               	movf	___ftdiv@f1,w
  1029  069C  00A6               	movwf	??___ftdiv
  1030  069D  0824               	movf	___ftdiv@f1+1,w
  1031  069E  00A7               	movwf	??___ftdiv+1
  1032  069F  0825               	movf	___ftdiv@f1+2,w
  1033  06A0  00A8               	movwf	??___ftdiv+2
  1034  06A1  1003               	clrc
  1035  06A2  0D27               	rlf	??___ftdiv+1,w
  1036  06A3  0D28               	rlf	??___ftdiv+2,w
  1037  06A4  00A9               	movwf	??___ftdiv+3
  1038  06A5  0829               	movf	??___ftdiv+3,w
  1039  06A6  00AE               	movwf	___ftdiv@exp
  1040  06A7  08AE               	movf	___ftdiv@exp,f
  1041  06A8  1D03               	skipz
  1042  06A9  2EB1               	goto	l777
  1043  06AA  3000               	movlw	0
  1044  06AB  00A0               	movwf	?___ftdiv
  1045  06AC  3000               	movlw	0
  1046  06AD  00A1               	movwf	?___ftdiv+1
  1047  06AE  3000               	movlw	0
  1048  06AF  00A2               	movwf	?___ftdiv+2
  1049  06B0  0008               	return
  1050  06B1                     l777:	
  1051  06B1  0820               	movf	___ftdiv@f2,w
  1052  06B2  00A6               	movwf	??___ftdiv
  1053  06B3  0821               	movf	___ftdiv@f2+1,w
  1054  06B4  00A7               	movwf	??___ftdiv+1
  1055  06B5  0822               	movf	___ftdiv@f2+2,w
  1056  06B6  00A8               	movwf	??___ftdiv+2
  1057  06B7  1003               	clrc
  1058  06B8  0D27               	rlf	??___ftdiv+1,w
  1059  06B9  0D28               	rlf	??___ftdiv+2,w
  1060  06BA  00A9               	movwf	??___ftdiv+3
  1061  06BB  0829               	movf	??___ftdiv+3,w
  1062  06BC  00AF               	movwf	___ftdiv@sign
  1063  06BD  08AF               	movf	___ftdiv@sign,f
  1064  06BE  1D03               	skipz
  1065  06BF  2EC7               	goto	l783
  1066  06C0  3000               	movlw	0
  1067  06C1  00A0               	movwf	?___ftdiv
  1068  06C2  3000               	movlw	0
  1069  06C3  00A1               	movwf	?___ftdiv+1
  1070  06C4  3000               	movlw	0
  1071  06C5  00A2               	movwf	?___ftdiv+2
  1072  06C6  0008               	return
  1073  06C7                     l783:	
  1074  06C7  3000               	movlw	0
  1075  06C8  00AB               	movwf	___ftdiv@f3
  1076  06C9  3000               	movlw	0
  1077  06CA  00AC               	movwf	___ftdiv@f3+1
  1078  06CB  3000               	movlw	0
  1079  06CC  00AD               	movwf	___ftdiv@f3+2
  1080  06CD  3089               	movlw	137
  1081  06CE  072F               	addwf	___ftdiv@sign,w
  1082  06CF  00A6               	movwf	??___ftdiv
  1083  06D0  0826               	movf	??___ftdiv,w
  1084  06D1  02AE               	subwf	___ftdiv@exp,f
  1085  06D2  0823               	movf	___ftdiv@f1,w
  1086  06D3  00A6               	movwf	??___ftdiv
  1087  06D4  0824               	movf	___ftdiv@f1+1,w
  1088  06D5  00A7               	movwf	??___ftdiv+1
  1089  06D6  0825               	movf	___ftdiv@f1+2,w
  1090  06D7  00A8               	movwf	??___ftdiv+2
  1091  06D8  3010               	movlw	16
  1092  06D9                     u465:	
  1093  06D9  36A8               	lsrf	??___ftdiv+2,f
  1094  06DA  0CA7               	rrf	??___ftdiv+1,f
  1095  06DB  0CA6               	rrf	??___ftdiv,f
  1096  06DC  0B89               	decfsz	9,f
  1097  06DD  2ED9               	goto	u465
  1098  06DE  0826               	movf	??___ftdiv,w
  1099  06DF  00A9               	movwf	??___ftdiv+3
  1100  06E0  0829               	movf	??___ftdiv+3,w
  1101  06E1  00AF               	movwf	___ftdiv@sign
  1102  06E2  0820               	movf	___ftdiv@f2,w
  1103  06E3  00A6               	movwf	??___ftdiv
  1104  06E4  0821               	movf	___ftdiv@f2+1,w
  1105  06E5  00A7               	movwf	??___ftdiv+1
  1106  06E6  0822               	movf	___ftdiv@f2+2,w
  1107  06E7  00A8               	movwf	??___ftdiv+2
  1108  06E8  3010               	movlw	16
  1109  06E9                     u475:	
  1110  06E9  36A8               	lsrf	??___ftdiv+2,f
  1111  06EA  0CA7               	rrf	??___ftdiv+1,f
  1112  06EB  0CA6               	rrf	??___ftdiv,f
  1113  06EC  0B89               	decfsz	9,f
  1114  06ED  2EE9               	goto	u475
  1115  06EE  0826               	movf	??___ftdiv,w
  1116  06EF  00A9               	movwf	??___ftdiv+3
  1117  06F0  0829               	movf	??___ftdiv+3,w
  1118  06F1  06AF               	xorwf	___ftdiv@sign,f
  1119  06F2  3080               	movlw	128
  1120  06F3  00A6               	movwf	??___ftdiv
  1121  06F4  0826               	movf	??___ftdiv,w
  1122  06F5  05AF               	andwf	___ftdiv@sign,f
  1123  06F6  17A4               	bsf	___ftdiv@f1+1,7
  1124  06F7  30FF               	movlw	255
  1125  06F8  05A3               	andwf	___ftdiv@f1,f
  1126  06F9  30FF               	movlw	255
  1127  06FA  05A4               	andwf	___ftdiv@f1+1,f
  1128  06FB  3000               	movlw	0
  1129  06FC  05A5               	andwf	___ftdiv@f1+2,f
  1130  06FD  17A1               	bsf	___ftdiv@f2+1,7
  1131  06FE  30FF               	movlw	255
  1132  06FF  05A0               	andwf	___ftdiv@f2,f
  1133  0700  30FF               	movlw	255
  1134  0701  05A1               	andwf	___ftdiv@f2+1,f
  1135  0702  3000               	movlw	0
  1136  0703  05A2               	andwf	___ftdiv@f2+2,f
  1137  0704  3018               	movlw	24
  1138  0705  00A6               	movwf	??___ftdiv
  1139  0706  0826               	movf	??___ftdiv,w
  1140  0707  00AA               	movwf	___ftdiv@cntr
  1141  0708                     l797:	
  1142  0708  3001               	movlw	1
  1143  0709                     u485:	
  1144  0709  35AB               	lslf	___ftdiv@f3,f
  1145  070A  0DAC               	rlf	___ftdiv@f3+1,f
  1146  070B  0DAD               	rlf	___ftdiv@f3+2,f
  1147  070C  0B89               	decfsz	9,f
  1148  070D  2F09               	goto	u485
  1149  070E  0822               	movf	___ftdiv@f2+2,w
  1150  070F  0225               	subwf	___ftdiv@f1+2,w
  1151  0710  1D03               	skipz
  1152  0711  2F18               	goto	u495
  1153  0712  0821               	movf	___ftdiv@f2+1,w
  1154  0713  0224               	subwf	___ftdiv@f1+1,w
  1155  0714  1D03               	skipz
  1156  0715  2F18               	goto	u495
  1157  0716  0820               	movf	___ftdiv@f2,w
  1158  0717  0223               	subwf	___ftdiv@f1,w
  1159  0718                     u495:	
  1160  0718  1C03               	skipc
  1161  0719  2F21               	goto	l805
  1162  071A  0820               	movf	___ftdiv@f2,w
  1163  071B  02A3               	subwf	___ftdiv@f1,f
  1164  071C  0821               	movf	___ftdiv@f2+1,w
  1165  071D  3BA4               	subwfb	___ftdiv@f1+1,f
  1166  071E  0822               	movf	___ftdiv@f2+2,w
  1167  071F  3BA5               	subwfb	___ftdiv@f1+2,f
  1168  0720  142B               	bsf	___ftdiv@f3,0
  1169  0721                     l805:	
  1170  0721  3001               	movlw	1
  1171  0722                     u505:	
  1172  0722  35A3               	lslf	___ftdiv@f1,f
  1173  0723  0DA4               	rlf	___ftdiv@f1+1,f
  1174  0724  0DA5               	rlf	___ftdiv@f1+2,f
  1175  0725  0B89               	decfsz	9,f
  1176  0726  2F22               	goto	u505
  1177  0727  3001               	movlw	1
  1178  0728  02AA               	subwf	___ftdiv@cntr,f
  1179  0729  1D03               	btfss	3,2
  1180  072A  2F08               	goto	l797
  1181  072B  082B               	movf	___ftdiv@f3,w
  1182  072C  00F0               	movwf	___ftpack@arg
  1183  072D  082C               	movf	___ftdiv@f3+1,w
  1184  072E  00F1               	movwf	___ftpack@arg+1
  1185  072F  082D               	movf	___ftdiv@f3+2,w
  1186  0730  00F2               	movwf	___ftpack@arg+2
  1187  0731  082E               	movf	___ftdiv@exp,w
  1188  0732  00A6               	movwf	??___ftdiv
  1189  0733  0826               	movf	??___ftdiv,w
  1190  0734  00F3               	movwf	___ftpack@exp
  1191  0735  082F               	movf	___ftdiv@sign,w
  1192  0736  00A7               	movwf	??___ftdiv+1
  1193  0737  0827               	movf	??___ftdiv+1,w
  1194  0738  00F4               	movwf	___ftpack@sign
  1195  0739  3186  263A         	fcall	___ftpack
  1196  073B  0870               	movf	?___ftpack,w
  1197  073C  0020               	movlb	0	; select bank0
  1198  073D  00A0               	movwf	?___ftdiv
  1199  073E  0871               	movf	?___ftpack+1,w
  1200  073F  00A1               	movwf	?___ftdiv+1
  1201  0740  0872               	movf	?___ftpack+2,w
  1202  0741  00A2               	movwf	?___ftdiv+2
  1203  0742  0008               	return
  1204  0743                     __end_of___ftdiv:	
  1205                           
  1206                           	psect	text6
  1207  057F                     __ptext6:	
  1208 ;; *************** function ___awtoft *****************
  1209 ;; Defined at:
  1210 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awtoft.c"
  1211 ;; Parameters:    Size  Location     Type
  1212 ;;  c               2    8[COMMON] int 
  1213 ;; Auto vars:     Size  Location     Type
  1214 ;;  sign            1   13[COMMON] unsigned char 
  1215 ;; Return value:  Size  Location     Type
  1216 ;;                  3    8[COMMON] float 
  1217 ;; Registers used:
  1218 ;;		wreg, status,2, status,0, pclath, cstack
  1219 ;; Tracked objects:
  1220 ;;		On entry : 0/0
  1221 ;;		On exit  : 0/0
  1222 ;;		Unchanged: 0/0
  1223 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1224 ;;      Params:         3       0       0       0       0       0       0       0
  1225 ;;      Locals:         1       0       0       0       0       0       0       0
  1226 ;;      Temps:          2       0       0       0       0       0       0       0
  1227 ;;      Totals:         6       0       0       0       0       0       0       0
  1228 ;;Total ram usage:        6 bytes
  1229 ;; Hardware stack levels used:    1
  1230 ;; Hardware stack levels required when called:    1
  1231 ;; This function calls:
  1232 ;;		___ftpack
  1233 ;; This function is called by:
  1234 ;;		_loop
  1235 ;; This function uses a non-reentrant model
  1236 ;;
  1237                           
  1238                           
  1239                           ;psect for function ___awtoft
  1240  057F                     ___awtoft:	
  1241                           
  1242                           ;incstack = 0
  1243                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  1244  057F  01FD               	clrf	___awtoft@sign
  1245  0580  1FF9               	btfss	___awtoft@c+1,7
  1246  0581  2D89               	goto	l767
  1247  0582  09F8               	comf	___awtoft@c,f
  1248  0583  09F9               	comf	___awtoft@c+1,f
  1249  0584  0AF8               	incf	___awtoft@c,f
  1250  0585  1903               	skipnz
  1251  0586  0AF9               	incf	___awtoft@c+1,f
  1252  0587  01FD               	clrf	___awtoft@sign
  1253  0588  0AFD               	incf	___awtoft@sign,f
  1254  0589                     l767:	
  1255  0589  0878               	movf	___awtoft@c,w
  1256  058A  00F0               	movwf	___ftpack@arg
  1257  058B  0879               	movf	___awtoft@c+1,w
  1258  058C  00F1               	movwf	___ftpack@arg+1
  1259  058D  01F2               	clrf	___ftpack@arg+2
  1260  058E  308E               	movlw	142
  1261  058F  00FB               	movwf	??___awtoft
  1262  0590  087B               	movf	??___awtoft,w
  1263  0591  00F3               	movwf	___ftpack@exp
  1264  0592  087D               	movf	___awtoft@sign,w
  1265  0593  00FC               	movwf	??___awtoft+1
  1266  0594  087C               	movf	??___awtoft+1,w
  1267  0595  00F4               	movwf	___ftpack@sign
  1268  0596  3186  263A         	fcall	___ftpack
  1269  0598  0870               	movf	?___ftpack,w
  1270  0599  00F8               	movwf	?___awtoft
  1271  059A  0871               	movf	?___ftpack+1,w
  1272  059B  00F9               	movwf	?___awtoft+1
  1273  059C  0872               	movf	?___ftpack+2,w
  1274  059D  00FA               	movwf	?___awtoft+2
  1275  059E  0008               	return
  1276  059F                     __end_of___awtoft:	
  1277                           
  1278                           	psect	text7
  1279  063A                     __ptext7:	
  1280 ;; *************** function ___ftpack *****************
  1281 ;; Defined at:
  1282 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\float.c"
  1283 ;; Parameters:    Size  Location     Type
  1284 ;;  arg             3    0[COMMON] unsigned um
  1285 ;;  exp             1    3[COMMON] unsigned char 
  1286 ;;  sign            1    4[COMMON] unsigned char 
  1287 ;; Auto vars:     Size  Location     Type
  1288 ;;		None
  1289 ;; Return value:  Size  Location     Type
  1290 ;;                  3    0[COMMON] float 
  1291 ;; Registers used:
  1292 ;;		wreg, status,2, status,0
  1293 ;; Tracked objects:
  1294 ;;		On entry : 0/0
  1295 ;;		On exit  : 0/0
  1296 ;;		Unchanged: 0/0
  1297 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1298 ;;      Params:         5       0       0       0       0       0       0       0
  1299 ;;      Locals:         0       0       0       0       0       0       0       0
  1300 ;;      Temps:          3       0       0       0       0       0       0       0
  1301 ;;      Totals:         8       0       0       0       0       0       0       0
  1302 ;;Total ram usage:        8 bytes
  1303 ;; Hardware stack levels used:    1
  1304 ;; This function calls:
  1305 ;;		Nothing
  1306 ;; This function is called by:
  1307 ;;		___awtoft
  1308 ;;		___ftdiv
  1309 ;; This function uses a non-reentrant model
  1310 ;;
  1311                           
  1312                           
  1313                           ;psect for function ___ftpack
  1314  063A                     ___ftpack:	
  1315                           
  1316                           ;incstack = 0
  1317                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  1318  063A  0873               	movf	___ftpack@exp,w
  1319  063B  1903               	btfsc	3,2
  1320  063C  2E42               	goto	l717
  1321  063D  0872               	movf	___ftpack@arg+2,w
  1322  063E  0471               	iorwf	___ftpack@arg+1,w
  1323  063F  0470               	iorwf	___ftpack@arg,w
  1324  0640  1D03               	skipz
  1325  0641  2E53               	goto	l723
  1326  0642                     l717:	
  1327  0642  3000               	movlw	0
  1328  0643  00F0               	movwf	?___ftpack
  1329  0644  3000               	movlw	0
  1330  0645  00F1               	movwf	?___ftpack+1
  1331  0646  3000               	movlw	0
  1332  0647  00F2               	movwf	?___ftpack+2
  1333  0648  0008               	return
  1334  0649                     l721:	
  1335  0649  3001               	movlw	1
  1336  064A  00F5               	movwf	??___ftpack
  1337  064B  0875               	movf	??___ftpack,w
  1338  064C  07F3               	addwf	___ftpack@exp,f
  1339  064D  3001               	movlw	1
  1340  064E                     u335:	
  1341  064E  36F2               	lsrf	___ftpack@arg+2,f
  1342  064F  0CF1               	rrf	___ftpack@arg+1,f
  1343  0650  0CF0               	rrf	___ftpack@arg,f
  1344  0651  0B89               	decfsz	9,f
  1345  0652  2E4E               	goto	u335
  1346  0653                     l723:	
  1347  0653  30FE               	movlw	254
  1348  0654  0572               	andwf	___ftpack@arg+2,w
  1349  0655  1903               	btfsc	3,2
  1350  0656  2E6C               	goto	l303
  1351  0657  2E49               	goto	l721
  1352  0658                     l725:	
  1353  0658  3001               	movlw	1
  1354  0659  00F5               	movwf	??___ftpack
  1355  065A  0875               	movf	??___ftpack,w
  1356  065B  07F3               	addwf	___ftpack@exp,f
  1357  065C  3001               	movlw	1
  1358  065D  07F0               	addwf	___ftpack@arg,f
  1359  065E  3000               	movlw	0
  1360  065F  1803               	skipnc
  1361  0660  3001               	movlw	1
  1362  0661  07F1               	addwf	___ftpack@arg+1,f
  1363  0662  3000               	movlw	0
  1364  0663  1803               	skipnc
  1365  0664  3001               	movlw	1
  1366  0665  07F2               	addwf	___ftpack@arg+2,f
  1367  0666  3001               	movlw	1
  1368  0667                     u355:	
  1369  0667  36F2               	lsrf	___ftpack@arg+2,f
  1370  0668  0CF1               	rrf	___ftpack@arg+1,f
  1371  0669  0CF0               	rrf	___ftpack@arg,f
  1372  066A  0B89               	decfsz	9,f
  1373  066B  2E67               	goto	u355
  1374  066C                     l303:	
  1375  066C  30FF               	movlw	255
  1376  066D  0572               	andwf	___ftpack@arg+2,w
  1377  066E  1903               	btfsc	3,2
  1378  066F  2E79               	goto	l733
  1379  0670  2E58               	goto	l725
  1380  0671                     l731:	
  1381  0671  3001               	movlw	1
  1382  0672  02F3               	subwf	___ftpack@exp,f
  1383  0673  3001               	movlw	1
  1384  0674                     u375:	
  1385  0674  35F0               	lslf	___ftpack@arg,f
  1386  0675  0DF1               	rlf	___ftpack@arg+1,f
  1387  0676  0DF2               	rlf	___ftpack@arg+2,f
  1388  0677  0B89               	decfsz	9,f
  1389  0678  2E74               	goto	u375
  1390  0679                     l733:	
  1391  0679  1FF1               	btfss	___ftpack@arg+1,7
  1392  067A  2E71               	goto	l731
  1393  067B  1873               	btfsc	___ftpack@exp,0
  1394  067C  2E83               	goto	l309
  1395  067D  30FF               	movlw	255
  1396  067E  05F0               	andwf	___ftpack@arg,f
  1397  067F  307F               	movlw	127
  1398  0680  05F1               	andwf	___ftpack@arg+1,f
  1399  0681  30FF               	movlw	255
  1400  0682  05F2               	andwf	___ftpack@arg+2,f
  1401  0683                     l309:	
  1402  0683  1003               	clrc
  1403  0684  0CF3               	rrf	___ftpack@exp,f
  1404  0685  0873               	movf	___ftpack@exp,w
  1405  0686  00F5               	movwf	??___ftpack
  1406  0687  01F6               	clrf	??___ftpack+1
  1407  0688  01F7               	clrf	??___ftpack+2
  1408  0689  3010               	movlw	16
  1409  068A                     u405:	
  1410  068A  35F5               	lslf	??___ftpack,f
  1411  068B  0DF6               	rlf	??___ftpack+1,f
  1412  068C  0DF7               	rlf	??___ftpack+2,f
  1413  068D  0B89               	decfsz	9,f
  1414  068E  2E8A               	goto	u405
  1415  068F  0875               	movf	??___ftpack,w
  1416  0690  04F0               	iorwf	___ftpack@arg,f
  1417  0691  0876               	movf	??___ftpack+1,w
  1418  0692  04F1               	iorwf	___ftpack@arg+1,f
  1419  0693  0877               	movf	??___ftpack+2,w
  1420  0694  04F2               	iorwf	___ftpack@arg+2,f
  1421  0695  0874               	movf	___ftpack@sign,w
  1422  0696  1903               	btfsc	3,2
  1423  0697  0008               	return
  1424  0698  17F2               	bsf	___ftpack@arg+2,7
  1425  0699  0008               	return
  1426  069A                     __end_of___ftpack:	
  1427  007E                     btemp	set	126	;btemp
  1428  007E                     pic14e$flags	set	126
  1429  007E                     wtemp	set	126
  1430  007E                     wtemp0	set	126
  1431  0080                     wtemp1	set	128
  1432  0082                     wtemp2	set	130
  1433  0084                     wtemp3	set	132
  1434  0086                     wtemp4	set	134
  1435  0088                     wtemp5	set	136
  1436  007F                     wtemp6	set	127
  1437  007E                     ttemp	set	126
  1438  007E                     ttemp0	set	126
  1439  0081                     ttemp1	set	129
  1440  0084                     ttemp2	set	132
  1441  0087                     ttemp3	set	135
  1442  007F                     ttemp4	set	127
  1443  007E                     ltemp	set	126
  1444  007E                     ltemp0	set	126
  1445  0082                     ltemp1	set	130
  1446  0086                     ltemp2	set	134
  1447  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         3
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     18      25
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _loop->___awtoft
    ___ftdiv->___awtoft
    ___awtoft->___ftpack

Critical Paths under _main in BANK0

    _main->_loop
    _loop->___ftdiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    5412
                               _loop
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _loop                                                 2     2      0    5412
                                             16 BANK0      2     2      0
                           ___awtoft
                            ___ftdiv
                             ___ftge
                          _convertir
 ---------------------------------------------------------------------------------
 (2) _convertir                                           11     9      2     197
                                              0 COMMON    11     9      2
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               9     3      6     520
                                              0 COMMON     9     3      6
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             16    10      6    2506
                                              0 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___awtoft                                             6     3      3    2189
                                              8 COMMON     6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    1970
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _loop
     ___awtoft
       ___ftpack
     ___ftdiv
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
     ___ftge
     _convertir
   _setup

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      27       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     12      19       6       31.3%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0      27      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Tue Jun 02 08:35:37 2015

            __CFG_CP$OFF 0000                       l30 0614                       l42 0743  
                     l44 07B3                      l303 066C                      l309 0683  
                    l721 0649                      l731 0671                      l723 0653  
                    l733 0679                      l725 0658                      l717 0642  
                    l805 0721                      l821 05EE                      l817 05D8  
                    l767 0589                      l783 06C7                      l855 07F6  
                    l847 07D9                      l839 077E                      l777 06B1  
                    l849 07DC                      l797 0708                      u405 068A  
                    u335 064E                      u505 0722             __CFG_CPD$OFF 0000  
                    u355 0667                      u375 0674                      u465 06D9  
                    u617 060F                      u475 06E9                      u555 0769  
                    u485 0709                      u565 0789                      u495 0718  
                    _neg 0032                      _pos 0034             __CFG_BORV$LO 0000  
                    wreg 0009             __CFG_LVP$OFF 0000             ___ftdiv@cntr 002A  
           ___ftdiv@sign 002F             __CFG_WRT$OFF 0000                     _main 0578  
           ___ftpack@arg 0070                     _loop 0743             ___ftpack@exp 0073  
                   btemp 007E                     ltemp 007E                     start 0002  
                   ttemp 007E                     wtemp 007E            __CFG_IESO$OFF 0000  
                  ?_main 0070                    ?_loop 0070            __CFG_WDTE$OFF 0000  
        __end_of___ftdiv 0743                    _PORTA 000C                    _PORTB 000D  
                  _TRISB 008D           __CFG_FCMEN$OFF 0000            ___awtoft@sign 007D  
          ___ftpack@sign 0074                    _setup 059F           __CFG_BOREN$OFF 0000  
                  ltemp0 007E                    ltemp1 0082                    ltemp2 0086  
                  ltemp3 0080                    ttemp0 007E                    ttemp1 0081  
                  ttemp2 0084                    ttemp3 0087                    ttemp4 007F  
                  status 0003                    wtemp0 007E                    wtemp1 0080  
                  wtemp2 0082                    wtemp3 0084                    wtemp4 0086  
                  wtemp5 0088                    wtemp6 007F           __CFG_MCLRE$OFF 0000  
        __initialization 07F9             __end_of_main 057F             __end_of_loop 07F9  
                 ??_main 007E                   ??_loop 0030           __CFG_PLLEN$OFF 0000  
                 _ADRESH 009C                   _ADRESL 009B                   ?_setup 0070  
       __end_of___awtoft 059F                   _ANSELB 018D         __end_of___ftpack 069A  
         __CFG_PWRTE$OFF 0000                   ___ftge 05C2                ??___ftdiv 0026  
                 _result 0036  __end_of__initialization 07FC               ___ftge@ff1 0070  
             ___ftge@ff2 0073               ___ftdiv@f1 0023               ___ftdiv@f2 0020  
             ___ftdiv@f3 002B               ___awtoft@c 0078           __pcstackCOMMON 0070  
          __end_of_setup 05C2                  ??_setup 0070       __size_of_convertir 003D  
             __pbssBANK0 0036               __pmaintext 0578                  ?___ftge 0070  
              ?___awtoft 0078                ?___ftpack 0070          __size_of___ftge 003B  
                ___ftdiv 069A          __CFG_STVREN$OFF 0000        __end_of_convertir 063A  
             ??___awtoft 007B               ??___ftpack 0075                  __ptext1 059F  
                __ptext2 0743                  __ptext3 05FD                  __ptext4 05C2  
                __ptext5 069A                  __ptext6 057F                  __ptext7 063A  
   end_of_initialization 07FC         __CFG_FOSC$INTOSC 0000                _TRISAbits 008C  
            ___ftdiv@exp 002E         convertir@channel 0070           __end_of___ftge 05FD  
             convertir@i 0079      start_initialization 07F9                 ??___ftge 0076  
      __size_of___awtoft 0020        __size_of___ftpack 0060                ___latbits 0002  
          __pcstackBANK0 0020                __pnvBANK0 0032                 ?___ftdiv 0020  
              _convertir 05FD           __size_of_setup 0023               _ADCON0bits 009D  
             _ADCON1bits 009E               ?_convertir 0070         __size_of___ftdiv 00A9  
               ___awtoft 057F                 ___ftpack 063A               _ANSELAbits 018C  
          __size_of_main 0007            __size_of_loop 00B6              ??_convertir 0072  
            pic14e$flags 007E        __CFG_CLKOUTEN$OFF 0000               _OSCCONbits 0099  
